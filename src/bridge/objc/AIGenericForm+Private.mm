// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from form2.djinni

#import "AIGenericForm+Private.h"
#import "AIGenericForm.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class GenericForm::ObjcProxy final
: public ::ai::GenericForm
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::GenericForm;
public:
    using ObjcProxyBase::ObjcProxyBase;
    std::string input_get(int32_t c_input_id) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() inputGet:(::djinni::I32::fromCpp(c_input_id))];
            return ::djinni::String::toCpp(objcpp_result_);
        }
    }
    void input_set(int32_t c_input_id, const std::string & c_value) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() inputSet:(::djinni::I32::fromCpp(c_input_id))
                                                         value:(::djinni::String::fromCpp(c_value))];
        }
    }
    void input_configure(int32_t c_input_id, const std::string & c_config) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() inputConfigure:(::djinni::I32::fromCpp(c_input_id))
                                                              config:(::djinni::String::fromCpp(c_config))];
        }
    }
    bool enable(int32_t c_element_id, bool c_enabled) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() enable:(::djinni::I32::fromCpp(c_element_id))
                                                                           enabled:(::djinni::Bool::fromCpp(c_enabled))];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
    void error(int32_t c_element_id, const std::string & c_message) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() error:(::djinni::I32::fromCpp(c_element_id))
                                                    message:(::djinni::String::fromCpp(c_message))];
        }
    }
    void close() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() close];
        }
    }
    bool validate() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() validate];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
    void disable_actions() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() disableActions];
        }
    }
    void show_message(const std::string & c_message) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() showMessage:(::djinni::String::fromCpp(c_message))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto GenericForm::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto GenericForm::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
