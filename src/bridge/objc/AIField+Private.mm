// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from form2.djinni

#import "AIField+Private.h"
#import "AIBlock+Private.h"
#import "AIDataType+Private.h"
#import "AIFieldType+Private.h"
#import "AIStyle+Private.h"
#import "DJIMarshal+Private.h"
#include <cassert>

namespace djinni_generated {

auto Field::toCpp(ObjcType obj) -> CppType
{
    assert(obj);
    return {::djinni_generated::Block::toCpp(obj.rect),
            ::djinni::I32::toCpp(obj.fieldId),
            ::djinni::Enum<::ai::DataType, AIDataType>::toCpp(obj.dataT),
            ::djinni::Enum<::ai::FieldType, AIFieldType>::toCpp(obj.fieldT),
            ::djinni::String::toCpp(obj.title),
            ::djinni::Bool::toCpp(obj.required),
            ::djinni_generated::Style::toCpp(obj.style)};
}

auto Field::fromCpp(const CppType& cpp) -> ObjcType
{
    return [[AIField alloc] initWithRect:(::djinni_generated::Block::fromCpp(cpp.rect))
                                 fieldId:(::djinni::I32::fromCpp(cpp.field_id))
                                   dataT:(::djinni::Enum<::ai::DataType, AIDataType>::fromCpp(cpp.data_t))
                                  fieldT:(::djinni::Enum<::ai::FieldType, AIFieldType>::fromCpp(cpp.field_t))
                                   title:(::djinni::String::fromCpp(cpp.title))
                                required:(::djinni::Bool::fromCpp(cpp.required))
                                   style:(::djinni_generated::Style::fromCpp(cpp.style))];
}

}  // namespace djinni_generated
