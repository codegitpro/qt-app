// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from form.djinni

#import "AIOsForm+Private.h"
#import "AIOsForm.h"
#import "AIMessage+Private.h"
#import "AIStatus+Private.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class OsForm::ObjcProxy final
: public ::ai::OsForm
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::OsForm;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void action_result(::ai::Status c_outcome, const std::vector<::ai::Message> & c_lines) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() actionResult:(::djinni::Enum<::ai::Status, AIStatus>::fromCpp(c_outcome))
                                                             lines:(::djinni::List<::djinni_generated::Message>::fromCpp(c_lines))];
        }
    }
    void progress(int32_t c_position, int32_t c_total) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() progress:(::djinni::I32::fromCpp(c_position))
                                                         total:(::djinni::I32::fromCpp(c_total))];
        }
    }
    void enable(int32_t c_group) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() enable:(::djinni::I32::fromCpp(c_group))];
        }
    }
    void disable(int32_t c_group) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() disable:(::djinni::I32::fromCpp(c_group))];
        }
    }
    std::unordered_map<int32_t, std::string> input() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() input];
            return ::djinni::Map<::djinni::I32, ::djinni::String>::toCpp(objcpp_result_);
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto OsForm::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto OsForm::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
