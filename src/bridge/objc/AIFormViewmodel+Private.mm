// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from portal.djinni

#import "AIFormViewmodel+Private.h"
#import "AIFormViewmodel.h"
#import "AIField+Private.h"
#import "AIFormView+Private.h"
#import "AIGenericForm+Private.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface AIFormViewmodel ()

- (id)initWithCpp:(const std::shared_ptr<::ai::FormViewmodel>&)cppRef;

@end

@implementation AIFormViewmodel {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::ai::FormViewmodel>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::ai::FormViewmodel>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)action:(int32_t)elementId {
    try {
        _cppRefHandle.get()->action(::djinni::I32::toCpp(elementId));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)back {
    try {
        _cppRefHandle.get()->back();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSArray<AIField *> *)fields {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->fields();
        return ::djinni::List<::djinni_generated::Field>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onLoad:(nullable id<AIFormView>)view
          form:(nullable id<AIGenericForm>)form {
    try {
        _cppRefHandle.get()->on_load(::djinni_generated::FormView::toCpp(view),
                                     ::djinni_generated::GenericForm::toCpp(form));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)hideNavigation {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->hide_navigation();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)holdonToVm {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->holdon_to_vm();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto FormViewmodel::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto FormViewmodel::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<AIFormViewmodel>(cpp);
}

}  // namespace djinni_generated

@end
