// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from portal.djinni

#import "AIStoreViewmodel+Private.h"
#import "AIStoreViewmodel.h"
#import "AIProduct+Private.h"
#import "AITransactionDetail+Private.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface AIStoreViewmodel ()

- (id)initWithCpp:(const std::shared_ptr<::ai::StoreViewmodel>&)cppRef;

@end

@implementation AIStoreViewmodel {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::ai::StoreViewmodel>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::ai::StoreViewmodel>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)onTransactionStates:(nonnull NSDictionary<NSString *, AITransactionDetail *> *)states {
    try {
        _cppRefHandle.get()->on_transaction_states(::djinni::Map<::djinni::String, ::djinni_generated::TransactionDetail>::toCpp(states));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onProducts:(nonnull NSArray<AIProduct *> *)products {
    try {
        _cppRefHandle.get()->on_products(::djinni::List<::djinni_generated::Product>::toCpp(products));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onRestoreFail:(nonnull NSString *)errorMessage {
    try {
        _cppRefHandle.get()->on_restore_fail(::djinni::String::toCpp(errorMessage));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onRestoreFinished {
    try {
        _cppRefHandle.get()->on_restore_finished();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto StoreViewmodel::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto StoreViewmodel::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<AIStoreViewmodel>(cpp);
}

}  // namespace djinni_generated

@end
