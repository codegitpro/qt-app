// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from portal.djinni

#include "NativeOsGui.hpp"  // my header
#include "Marshal.hpp"
#include "NativeElement.hpp"
#include "NativeFileType.hpp"
#include "NativeIntResult.hpp"
#include "NativeOsForm.hpp"
#include "NativeVoidResult.hpp"

namespace djinni_generated {

NativeOsGui::NativeOsGui() : ::djinni::JniInterface<::ai::OsGui, NativeOsGui>() {}

NativeOsGui::~NativeOsGui() = default;

NativeOsGui::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeOsGui::JavaProxy::~JavaProxy() = default;

void NativeOsGui::JavaProxy::show_cloudstore() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeOsGui>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_showCloudstore);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeOsGui::JavaProxy::gui_thread(const std::shared_ptr<::ai::VoidResult> & c_cb) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeOsGui>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_guiThread,
                           ::djinni::get(::djinni_generated::NativeVoidResult::fromCpp(jniEnv, c_cb)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeOsGui::JavaProxy::back() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeOsGui>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_back);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeOsGui::JavaProxy::open_link_in_browser(const std::string & c_url) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeOsGui>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_openLinkInBrowser,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_url)));
    ::djinni::jniExceptionCheck(jniEnv);
}
std::shared_ptr<::ai::OsForm> NativeOsGui::JavaProxy::create_form(const std::string & c_title, bool c_start_hierarchy, int32_t c_width, int32_t c_height, const std::shared_ptr<::ai::IntResult> & c_action, const std::vector<::ai::Element> & c_elements) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeOsGui>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_createForm,
                                         ::djinni::get(::djinni::String::fromCpp(jniEnv, c_title)),
                                         ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c_start_hierarchy)),
                                         ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_width)),
                                         ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_height)),
                                         ::djinni::get(::djinni_generated::NativeIntResult::fromCpp(jniEnv, c_action)),
                                         ::djinni::get(::djinni::List<::djinni_generated::NativeElement>::fromCpp(jniEnv, c_elements)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::NativeOsForm::toCpp(jniEnv, jret);
}
void NativeOsGui::JavaProxy::show_message(const std::string & c_message) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeOsGui>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_showMessage,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_message)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeOsGui::JavaProxy::preview(::ai::FileType c_type, const std::string & c_path, int32_t c_file_id, const std::string & c_file_name) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeOsGui>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_preview,
                           ::djinni::get(::djinni_generated::NativeFileType::fromCpp(jniEnv, c_type)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_path)),
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_file_id)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_file_name)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeOsGui::JavaProxy::reset() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeOsGui>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_reset);
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
