// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from portal.djinni

#include "NativeRootViewmodel.hpp"  // my header
#include "Marshal.hpp"
#include "NativeDiagnostic.hpp"
#include "NativeOsIo.hpp"
#include "NativeScreenType.hpp"
#include "NativeUiCallback.hpp"
#include "NativeView.hpp"
#include "NativeWorker.hpp"

namespace djinni_generated {

NativeRootViewmodel::NativeRootViewmodel() : ::djinni::JniInterface<::ai::RootViewmodel, NativeRootViewmodel>("net/ai/RootViewmodel$CppProxy") {}

NativeRootViewmodel::~NativeRootViewmodel() = default;


CJNIEXPORT void JNICALL Java_net_ai_RootViewmodel_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ai::RootViewmodel>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_net_ai_RootViewmodel_00024CppProxy_create(JNIEnv* jniEnv, jobject /*this*/, jobject j_scheduler, jstring j_appDataLocation, jint j_thumbPx, jobject j_io, jobject j_view, jobject j_type, jobject j_callback, jobject j_logger)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ai::RootViewmodel::create(::djinni_generated::NativeWorker::toCpp(jniEnv, j_scheduler),
                                             ::djinni::String::toCpp(jniEnv, j_appDataLocation),
                                             ::djinni::I32::toCpp(jniEnv, j_thumbPx),
                                             ::djinni_generated::NativeOsIo::toCpp(jniEnv, j_io),
                                             ::djinni_generated::NativeView::toCpp(jniEnv, j_view),
                                             ::djinni_generated::NativeScreenType::toCpp(jniEnv, j_type),
                                             ::djinni_generated::NativeUiCallback::toCpp(jniEnv, j_callback),
                                             ::djinni_generated::NativeDiagnostic::toCpp(jniEnv, j_logger));
        return ::djinni::release(::djinni_generated::NativeRootViewmodel::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
