// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from portal.djinni

#pragma once

#include "djinni_support.hpp"
#include "product.hpp"

namespace djinni_generated {

class NativeProduct final {
public:
    using CppType = ::ai::Product;
    using JniType = jobject;

    using Boxed = NativeProduct;

    ~NativeProduct();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeProduct();
    friend ::djinni::JniClass<NativeProduct>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/ai/Product") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;FLjava/lang/String;)V") };
    const jfieldID field_mProductId { ::djinni::jniGetFieldID(clazz.get(), "mProductId", "Ljava/lang/String;") };
    const jfieldID field_mTitle { ::djinni::jniGetFieldID(clazz.get(), "mTitle", "Ljava/lang/String;") };
    const jfieldID field_mProductDescription { ::djinni::jniGetFieldID(clazz.get(), "mProductDescription", "Ljava/lang/String;") };
    const jfieldID field_mPrice { ::djinni::jniGetFieldID(clazz.get(), "mPrice", "F") };
    const jfieldID field_mFormattedPrice { ::djinni::jniGetFieldID(clazz.get(), "mFormattedPrice", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
