// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from portal.djinni

#include "NativeFormViewmodel.hpp"  // my header
#include "Marshal.hpp"
#include "NativeField.hpp"
#include "NativeFormView.hpp"
#include "NativeGenericForm.hpp"

namespace djinni_generated {

NativeFormViewmodel::NativeFormViewmodel() : ::djinni::JniInterface<::ai::FormViewmodel, NativeFormViewmodel>("net/ai/FormViewmodel$CppProxy") {}

NativeFormViewmodel::~NativeFormViewmodel() = default;


CJNIEXPORT void JNICALL Java_net_ai_FormViewmodel_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ai::FormViewmodel>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_net_ai_FormViewmodel_00024CppProxy_native_1action(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_elementId)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ai::FormViewmodel>(nativeRef);
        ref->action(::djinni::I32::toCpp(jniEnv, j_elementId));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_net_ai_FormViewmodel_00024CppProxy_native_1back(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ai::FormViewmodel>(nativeRef);
        ref->back();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_net_ai_FormViewmodel_00024CppProxy_native_1fields(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ai::FormViewmodel>(nativeRef);
        auto r = ref->fields();
        return ::djinni::release(::djinni::List<::djinni_generated::NativeField>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_net_ai_FormViewmodel_00024CppProxy_native_1onLoad(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_view, jobject j_form)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ai::FormViewmodel>(nativeRef);
        ref->on_load(::djinni_generated::NativeFormView::toCpp(jniEnv, j_view),
                     ::djinni_generated::NativeGenericForm::toCpp(jniEnv, j_form));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jboolean JNICALL Java_net_ai_FormViewmodel_00024CppProxy_native_1hideNavigation(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ai::FormViewmodel>(nativeRef);
        auto r = ref->hide_navigation();
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_net_ai_FormViewmodel_00024CppProxy_native_1holdonToVm(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ai::FormViewmodel>(nativeRef);
        auto r = ref->holdon_to_vm();
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
