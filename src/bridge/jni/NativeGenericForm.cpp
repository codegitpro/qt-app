// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from form2.djinni

#include "NativeGenericForm.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeGenericForm::NativeGenericForm() : ::djinni::JniInterface<::ai::GenericForm, NativeGenericForm>() {}

NativeGenericForm::~NativeGenericForm() = default;

NativeGenericForm::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeGenericForm::JavaProxy::~JavaProxy() = default;

std::string NativeGenericForm::JavaProxy::input_get(int32_t c_input_id) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGenericForm>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_inputGet,
                                                  ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_input_id)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
void NativeGenericForm::JavaProxy::input_set(int32_t c_input_id, const std::string & c_value) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGenericForm>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_inputSet,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_input_id)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_value)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeGenericForm::JavaProxy::input_configure(int32_t c_input_id, const std::string & c_config) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGenericForm>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_inputConfigure,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_input_id)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_config)));
    ::djinni::jniExceptionCheck(jniEnv);
}
bool NativeGenericForm::JavaProxy::enable(int32_t c_element_id, bool c_enabled) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGenericForm>::get();
    auto jret = jniEnv->CallBooleanMethod(Handle::get().get(), data.method_enable,
                                          ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_element_id)),
                                          ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c_enabled)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Bool::toCpp(jniEnv, jret);
}
void NativeGenericForm::JavaProxy::error(int32_t c_element_id, const std::string & c_message) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGenericForm>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_error,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_element_id)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_message)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeGenericForm::JavaProxy::close() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGenericForm>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_close);
    ::djinni::jniExceptionCheck(jniEnv);
}
bool NativeGenericForm::JavaProxy::validate() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGenericForm>::get();
    auto jret = jniEnv->CallBooleanMethod(Handle::get().get(), data.method_validate);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Bool::toCpp(jniEnv, jret);
}
void NativeGenericForm::JavaProxy::disable_actions() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGenericForm>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_disableActions);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeGenericForm::JavaProxy::show_message(const std::string & c_message) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeGenericForm>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_showMessage,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_message)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
