// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from form2.djinni

#pragma once

#include "djinni_support.hpp"
#include "style.hpp"

namespace djinni_generated {

class NativeStyle final {
public:
    using CppType = ::ai::Style;
    using JniType = jobject;

    using Boxed = NativeStyle;

    ~NativeStyle();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeStyle();
    friend ::djinni::JniClass<NativeStyle>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/ai/Style") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lnet/ai/Size;Lnet/ai/Align;Lnet/ai/Colour;Lnet/ai/Weight;I)V") };
    const jfieldID field_mSize { ::djinni::jniGetFieldID(clazz.get(), "mSize", "Lnet/ai/Size;") };
    const jfieldID field_mAlign { ::djinni::jniGetFieldID(clazz.get(), "mAlign", "Lnet/ai/Align;") };
    const jfieldID field_mColour { ::djinni::jniGetFieldID(clazz.get(), "mColour", "Lnet/ai/Colour;") };
    const jfieldID field_mWeight { ::djinni::jniGetFieldID(clazz.get(), "mWeight", "Lnet/ai/Weight;") };
    const jfieldID field_mWidth { ::djinni::jniGetFieldID(clazz.get(), "mWidth", "I") };
};

}  // namespace djinni_generated
