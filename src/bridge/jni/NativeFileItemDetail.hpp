// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from portal.djinni

#pragma once

#include "djinni_support.hpp"
#include "file_item_detail.hpp"

namespace djinni_generated {

class NativeFileItemDetail final {
public:
    using CppType = ::ai::FileItemDetail;
    using JniType = jobject;

    using Boxed = NativeFileItemDetail;

    ~NativeFileItemDetail();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeFileItemDetail();
    friend ::djinni::JniClass<NativeFileItemDetail>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/ai/FileItemDetail") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(ILnet/ai/FileState;ZLjava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_mItemId { ::djinni::jniGetFieldID(clazz.get(), "mItemId", "I") };
    const jfieldID field_mState { ::djinni::jniGetFieldID(clazz.get(), "mState", "Lnet/ai/FileState;") };
    const jfieldID field_mSelected { ::djinni::jniGetFieldID(clazz.get(), "mSelected", "Z") };
    const jfieldID field_mTitle { ::djinni::jniGetFieldID(clazz.get(), "mTitle", "Ljava/lang/String;") };
    const jfieldID field_mDetail { ::djinni::jniGetFieldID(clazz.get(), "mDetail", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
