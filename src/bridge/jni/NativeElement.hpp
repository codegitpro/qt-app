// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from form.djinni

#pragma once

#include "djinni_support.hpp"
#include "element.hpp"

namespace djinni_generated {

class NativeElement final {
public:
    using CppType = ::ai::Element;
    using JniType = jobject;

    using Boxed = NativeElement;

    ~NativeElement();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeElement();
    friend ::djinni::JniClass<NativeElement>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/ai/Element") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(ILnet/ai/ElementType;ILjava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_mGroup { ::djinni::jniGetFieldID(clazz.get(), "mGroup", "I") };
    const jfieldID field_mType { ::djinni::jniGetFieldID(clazz.get(), "mType", "Lnet/ai/ElementType;") };
    const jfieldID field_mInputId { ::djinni::jniGetFieldID(clazz.get(), "mInputId", "I") };
    const jfieldID field_mTitle { ::djinni::jniGetFieldID(clazz.get(), "mTitle", "Ljava/lang/String;") };
    const jfieldID field_mValue { ::djinni::jniGetFieldID(clazz.get(), "mValue", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
