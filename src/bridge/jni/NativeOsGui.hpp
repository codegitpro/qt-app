// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from portal.djinni

#pragma once

#include "djinni_support.hpp"
#include "os_gui.hpp"

namespace djinni_generated {

class NativeOsGui final : ::djinni::JniInterface<::ai::OsGui, NativeOsGui> {
public:
    using CppType = std::shared_ptr<::ai::OsGui>;
    using CppOptType = std::shared_ptr<::ai::OsGui>;
    using JniType = jobject;

    using Boxed = NativeOsGui;

    ~NativeOsGui();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeOsGui>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeOsGui>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeOsGui();
    friend ::djinni::JniClass<NativeOsGui>;
    friend ::djinni::JniInterface<::ai::OsGui, NativeOsGui>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::ai::OsGui
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void show_cloudstore() override;
        void gui_thread(const std::shared_ptr<::ai::VoidResult> & cb) override;
        void back() override;
        void open_link_in_browser(const std::string & url) override;
        std::shared_ptr<::ai::OsForm> create_form(const std::string & title, bool start_hierarchy, int32_t width, int32_t height, const std::shared_ptr<::ai::IntResult> & action, const std::vector<::ai::Element> & elements) override;
        void show_message(const std::string & message) override;
        void preview(::ai::FileType type, const std::string & path, int32_t file_id, const std::string & file_name) override;
        void reset() override;

    private:
        friend ::djinni::JniInterface<::ai::OsGui, ::djinni_generated::NativeOsGui>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/ai/OsGui") };
    const jmethodID method_showCloudstore { ::djinni::jniGetMethodID(clazz.get(), "showCloudstore", "()V") };
    const jmethodID method_guiThread { ::djinni::jniGetMethodID(clazz.get(), "guiThread", "(Lnet/ai/VoidResult;)V") };
    const jmethodID method_back { ::djinni::jniGetMethodID(clazz.get(), "back", "()V") };
    const jmethodID method_openLinkInBrowser { ::djinni::jniGetMethodID(clazz.get(), "openLinkInBrowser", "(Ljava/lang/String;)V") };
    const jmethodID method_createForm { ::djinni::jniGetMethodID(clazz.get(), "createForm", "(Ljava/lang/String;ZIILnet/ai/IntResult;Ljava/util/ArrayList;)Lnet/ai/OsForm;") };
    const jmethodID method_showMessage { ::djinni::jniGetMethodID(clazz.get(), "showMessage", "(Ljava/lang/String;)V") };
    const jmethodID method_preview { ::djinni::jniGetMethodID(clazz.get(), "preview", "(Lnet/ai/FileType;Ljava/lang/String;ILjava/lang/String;)V") };
    const jmethodID method_reset { ::djinni::jniGetMethodID(clazz.get(), "reset", "()V") };
};

}  // namespace djinni_generated
