// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from portal.djinni

#pragma once

#include "djinni_support.hpp"
#include "header.hpp"

namespace djinni_generated {

class NativeHeader final {
public:
    using CppType = ::ai::Header;
    using JniType = jobject;

    using Boxed = NativeHeader;

    ~NativeHeader();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeHeader();
    friend ::djinni::JniClass<NativeHeader>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("net/ai/Header") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_mName { ::djinni::jniGetFieldID(clazz.get(), "mName", "Ljava/lang/String;") };
    const jfieldID field_mValue { ::djinni::jniGetFieldID(clazz.get(), "mValue", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
