// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from portal.djinni

#include "NativeDiagnostic.hpp"  // my header
#include "Marshal.hpp"
#include "NativeLogType.hpp"

namespace djinni_generated {

NativeDiagnostic::NativeDiagnostic() : ::djinni::JniInterface<::ai::Diagnostic, NativeDiagnostic>() {}

NativeDiagnostic::~NativeDiagnostic() = default;

NativeDiagnostic::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeDiagnostic::JavaProxy::~JavaProxy() = default;

void NativeDiagnostic::JavaProxy::log(::ai::LogType c_type, int32_t c_line, const std::string & c_file, const std::string & c_message) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeDiagnostic>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_log,
                           ::djinni::get(::djinni_generated::NativeLogType::fromCpp(jniEnv, c_type)),
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_line)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_file)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_message)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeDiagnostic::JavaProxy::log_lines(::ai::LogType c_type, int32_t c_line, const std::string & c_file, const std::vector<std::string> & c_messages) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeDiagnostic>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_logLines,
                           ::djinni::get(::djinni_generated::NativeLogType::fromCpp(jniEnv, c_type)),
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_line)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_file)),
                           ::djinni::get(::djinni::List<::djinni::String>::fromCpp(jniEnv, c_messages)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
